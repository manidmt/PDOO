/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.GUI;

import controller.Controller;
import javax.swing.JPanel;

import deepspace.HangarToUI;
import deepspace.ShieldToUI;
import deepspace.WeaponToUI;

import java.awt.Component;
import java.util.ArrayList;

/**
 *
 * @author manuel
 */
public class HangarView extends JPanel {

    /**
     * Creates new form HangarView
     */
    public HangarView() {
        initComponents();
    }
    
    public void setHangar(HangarToUI h){
        
        if(h == null){
            setVisible(false);      // Si no hay hangar no se muestra
        }
        else{
            hangarPanel.removeAll();
            ArrayList<WeaponToUI> weapons = h.getWeapons();
            ArrayList<ShieldToUI> shieldBoosters = h.getShieldBoosters();
        
            for(WeaponToUI w : weapons){                    // Añadimos las 
                WeaponView weaponView = new WeaponView();   // vistas de las
                weaponView.setWeapon(w);                    // armas del 
                hangarPanel.add(weaponView);                // hangar
            }
            
            for(ShieldToUI s : shieldBoosters){             // Hacemos lo mismo
                ShieldView shieldView = new ShieldView();   // con las vistas
                shieldView.setShield(s);                    // de los escudos
                hangarPanel.add(shieldView);
            }
        }
        
        repaint();
        revalidate();
    }
    
    // Método para obtener los elementos seleccionados del Hangar
    void getSelectedInHangar(ArrayList<Integer> weaponsSelected, ArrayList<Integer> shieldsSelected){
        // Obtenemos el número de armas y el número de escudos que hay en el hangar
        int numWeapons = Controller.getInstance().getUIversion().getCurrentStation().getHangar().getWeapons().size();
        int numShields = Controller.getInstance().getUIversion().getCurrentStation().getHangar().getShieldBoosters().size();
        
        // Añadimos las armas seleccionadas 
        for(int i = 0; i < numWeapons; i++){
            
            Component c = hangarPanel.getComponent(i);
            if(((CombatElementView) c).isSelected())    weaponsSelected.add(i);  
        }
        
        // Añadimos los escudos seleccionados
        for(int i = 0; i < numShields; i++){
            
            Component c = hangarPanel.getComponent(i+numWeapons);
            if(((CombatElementView) c).isSelected())    shieldsSelected.add(i);
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        hangarPanel = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane1.setViewportView(hangarPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel hangarPanel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
