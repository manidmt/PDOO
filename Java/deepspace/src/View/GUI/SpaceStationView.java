/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.GUI;

import controller.Controller;
import deepspace.GameState;
import deepspace.ShieldToUI;
import deepspace.SpaceStationToUI;
import deepspace.WeaponToUI;
import java.awt.Component;
import java.util.ArrayList;

/**
 *
 * @author manuel
 */
public class SpaceStationView extends javax.swing.JPanel {
    
    private HangarView hangarView;
    private DamageView pendingDamageView;
    
    /**
     * Creates new form SpaceStationView
     */
    public SpaceStationView() {
        initComponents();
        repaint();
        revalidate();
    }
    
    void setSpaceStation(SpaceStationToUI ss){
        
        spaceStationHangarPanel.removeAll();
        hangarView = new HangarView();
        hangarView.setHangar(ss.getHangar());
        spaceStationHangarPanel.add(hangarView);
            
        spaceStationPendingDamagePanel.removeAll();
        pendingDamageView = new DamageView();
        pendingDamageView.setDamage(ss.getPendingDamage());
        spaceStationPendingDamagePanel.add(pendingDamageView);
        
        spaceStationName.setText(ss.getName());
        spaceStationAmmoPower.setText(Float.toString(ss.getAmmoPower()));
        spaceStationFuelUnits.setText(Float.toString(ss.getFuelUnits()));
        spaceStationNumMedals.setText(Integer.toString(ss.getnMedals()));
        spaceStationShieldPower.setText(Float.toString(ss.getShieldPower()));
        
        
        spaceStationWeaponsPanel.removeAll();
        spaceStationShiedlsPanel.removeAll();
        
        ArrayList<WeaponToUI> weapons = ss.getWeapons();
        ArrayList<ShieldToUI> shields = ss.getShieldBoosters();
        
        WeaponView weaponView;
        for(WeaponToUI w : weapons){
            weaponView = new WeaponView();
            weaponView.setWeapon(w);
            spaceStationWeaponsPanel.add(weaponView);
        }
        
        ShieldView shieldView;
        for(ShieldToUI s : shields){
            shieldView = new ShieldView();
            shieldView.setShield(s);
            spaceStationShiedlsPanel.add(shieldView);
        }
        
        
        enabledButtons(ss);
        repaint();
        revalidate();
    }   
    
    void enabledButtons(SpaceStationToUI ss){
        
        boolean hangarAvaiable = ss.getHangar() != null;
        boolean shieldsInHangar = false;
        boolean weaponsInHangar = false;
        boolean elementsInHangar = false;
        if(hangarAvaiable){
            weaponsInHangar = !ss.getHangar().getWeapons().isEmpty();
            shieldsInHangar = !ss.getHangar().getShieldBoosters().isEmpty();
            
            elementsInHangar = weaponsInHangar || shieldsInHangar;
        }
        boolean weaponsMounted = !ss.getWeapons().isEmpty();
        boolean shieldsMounted = !ss.getShieldBoosters().isEmpty();
        
        GameState gameState = Controller.getInstance().getState();
        boolean init = gameState == GameState.INIT;
        boolean aftercombat = gameState == GameState.AFTERCOMBAT;
        
        discardAllButton.setEnabled(hangarAvaiable && (init  || aftercombat));
        mountButton.setEnabled(hangarAvaiable && elementsInHangar && (init  || aftercombat));
        discardButton.setEnabled((elementsInHangar || weaponsMounted || shieldsMounted) && (init  || aftercombat));
    }
    
    ArrayList<Integer> getSelectedWeaponsMounted(){
        
        ArrayList<Integer> selectedWeaponsMounted = new ArrayList<>();
        
        int i = 0;
        for (Component c : spaceStationWeaponsPanel.getComponents()) {
            
            if (((CombatElementView) c).isSelected()) selectedWeaponsMounted.add(i);
            i++;
        }
        
        return selectedWeaponsMounted;
    }
    
    ArrayList<Integer> getSelectedShieldsMounted(){
        
        ArrayList<Integer> selectedShieldsMounted = new ArrayList<>();
        
        int i = 0;
        for (Component c : spaceStationShiedlsPanel.getComponents()) {
            
            if (((CombatElementView) c).isSelected()) selectedShieldsMounted.add(i);
            i++;
        }
        
        return selectedShieldsMounted;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spaceStationName_title = new javax.swing.JLabel();
        spaceStationName = new javax.swing.JLabel();
        spaceStationNumMedals_title = new javax.swing.JLabel();
        spaceStationNumMedals = new javax.swing.JLabel();
        spaceStationAmmoPower_title = new javax.swing.JLabel();
        spaceStationFuelUnits_title = new javax.swing.JLabel();
        spaceStationShieldPower_title = new javax.swing.JLabel();
        spaceStationFuelUnits = new javax.swing.JLabel();
        spaceStationAmmoPower = new javax.swing.JLabel();
        spaceStationShieldPower = new javax.swing.JLabel();
        spaceStationWeapons_title = new javax.swing.JLabel();
        spaceStationScrollWeapons = new javax.swing.JScrollPane();
        spaceStationWeaponsPanel = new javax.swing.JPanel();
        spaceStationShields_title = new javax.swing.JLabel();
        spaceStationScrollShields = new javax.swing.JScrollPane();
        spaceStationShiedlsPanel = new javax.swing.JPanel();
        spaceStationHangar_title = new javax.swing.JLabel();
        spaceStationHangarPanel = new javax.swing.JPanel();
        spaceStationPendingDamage_title = new javax.swing.JLabel();
        spaceStationPendingDamagePanel = new javax.swing.JPanel();
        mountButton = new javax.swing.JButton();
        discardButton = new javax.swing.JButton();
        discardAllButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(218, 218, 218));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        spaceStationName_title.setText("Nombre:");

        spaceStationName.setText("jLabel1");

        spaceStationNumMedals_title.setText("Número de Medallas:");

        spaceStationNumMedals.setText("jLabel1");

        spaceStationAmmoPower_title.setText("Potencia de Disparo:");

        spaceStationFuelUnits_title.setText("Unidades de Combustible:");

        spaceStationShieldPower_title.setText("Potencia del Escudo:");

        spaceStationFuelUnits.setText("jLabel1");

        spaceStationAmmoPower.setText("jLabel1");

        spaceStationShieldPower.setText("jLabel1");

        spaceStationWeapons_title.setText("Armas:");

        spaceStationWeaponsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout spaceStationWeaponsPanelLayout = new javax.swing.GroupLayout(spaceStationWeaponsPanel);
        spaceStationWeaponsPanel.setLayout(spaceStationWeaponsPanelLayout);
        spaceStationWeaponsPanelLayout.setHorizontalGroup(
            spaceStationWeaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );
        spaceStationWeaponsPanelLayout.setVerticalGroup(
            spaceStationWeaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );

        spaceStationScrollWeapons.setViewportView(spaceStationWeaponsPanel);

        spaceStationShields_title.setText("Escudos:");

        spaceStationShiedlsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout spaceStationShiedlsPanelLayout = new javax.swing.GroupLayout(spaceStationShiedlsPanel);
        spaceStationShiedlsPanel.setLayout(spaceStationShiedlsPanelLayout);
        spaceStationShiedlsPanelLayout.setHorizontalGroup(
            spaceStationShiedlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );
        spaceStationShiedlsPanelLayout.setVerticalGroup(
            spaceStationShiedlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );

        spaceStationScrollShields.setViewportView(spaceStationShiedlsPanel);

        spaceStationHangar_title.setText("Hangar");

        spaceStationPendingDamage_title.setText("Daño Pendiente:");

        spaceStationPendingDamagePanel.setBackground(new java.awt.Color(218, 218, 218));

        mountButton.setText("Montar");
        mountButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mountButtonActionPerformed(evt);
            }
        });

        discardButton.setText("Descartar");
        discardButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        discardAllButton.setText("Descartar todo");
        discardAllButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        discardAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(spaceStationName_title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spaceStationName)
                .addGap(185, 185, 185))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spaceStationNumMedals_title)
                                    .addComponent(spaceStationFuelUnits_title))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spaceStationNumMedals)
                                    .addComponent(spaceStationFuelUnits)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spaceStationHangarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(discardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(discardAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spaceStationShieldPower_title)
                                    .addComponent(spaceStationAmmoPower_title))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spaceStationAmmoPower, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spaceStationShieldPower, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spaceStationShields_title)
                                    .addComponent(spaceStationWeapons_title)
                                    .addComponent(spaceStationScrollShields)
                                    .addComponent(spaceStationScrollWeapons))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(spaceStationPendingDamage_title)
                                        .addGap(146, 146, 146))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(spaceStationPendingDamagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spaceStationHangar_title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(spaceStationName)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spaceStationName_title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(spaceStationNumMedals_title)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spaceStationNumMedals)
                            .addComponent(spaceStationAmmoPower)))
                    .addComponent(spaceStationAmmoPower_title))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spaceStationShieldPower_title)
                    .addComponent(spaceStationFuelUnits_title)
                    .addComponent(spaceStationFuelUnits)
                    .addComponent(spaceStationShieldPower))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spaceStationWeapons_title)
                    .addComponent(spaceStationPendingDamage_title))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spaceStationPendingDamagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spaceStationScrollWeapons, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spaceStationShields_title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spaceStationScrollShields, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(spaceStationHangar_title)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mountButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discardAllButton))
                    .addComponent(spaceStationHangarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mountButtonActionPerformed
        ArrayList<Integer> weaponsSelected = new ArrayList<>();
        ArrayList<Integer> shieldsSelected = new ArrayList<>();
        
        hangarView.getSelectedInHangar(weaponsSelected, shieldsSelected);
        Controller.getInstance().mount(weaponsSelected, shieldsSelected);
        
        MainWindow.getInstance().updateView();
    }//GEN-LAST:event_mountButtonActionPerformed

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
        
        ArrayList<Integer> weaponsMountedSelected = getSelectedWeaponsMounted();
        ArrayList<Integer> shieldsMountedSelected = getSelectedShieldsMounted();
        
        ArrayList<Integer> weaponsSelectedInHangar = new ArrayList<>();
        ArrayList<Integer> shieldsSelectedInHangar = new ArrayList<>();
        
        Controller.getInstance().discard(Controller.WEAPON, weaponsMountedSelected, shieldsMountedSelected);
        Controller.getInstance().discard(Controller.SHIELD, weaponsMountedSelected, shieldsMountedSelected);
        
        if(Controller.getInstance().getUIversion().getCurrentStation().getHangar() != null){
            hangarView.getSelectedInHangar(weaponsSelectedInHangar, shieldsSelectedInHangar);
            Controller.getInstance().discard(Controller.HANGAR, weaponsSelectedInHangar, shieldsSelectedInHangar);
        }
        
        MainWindow.getInstance().updateView();
    }//GEN-LAST:event_discardButtonActionPerformed

    private void discardAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardAllButtonActionPerformed
       
       Controller.getInstance().discardHangar();
       MainWindow.getInstance().updateView();
    }//GEN-LAST:event_discardAllButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton discardAllButton;
    private javax.swing.JButton discardButton;
    private javax.swing.JButton mountButton;
    private javax.swing.JLabel spaceStationAmmoPower;
    private javax.swing.JLabel spaceStationAmmoPower_title;
    private javax.swing.JLabel spaceStationFuelUnits;
    private javax.swing.JLabel spaceStationFuelUnits_title;
    private javax.swing.JPanel spaceStationHangarPanel;
    private javax.swing.JLabel spaceStationHangar_title;
    private javax.swing.JLabel spaceStationName;
    private javax.swing.JLabel spaceStationName_title;
    private javax.swing.JLabel spaceStationNumMedals;
    private javax.swing.JLabel spaceStationNumMedals_title;
    private javax.swing.JPanel spaceStationPendingDamagePanel;
    private javax.swing.JLabel spaceStationPendingDamage_title;
    private javax.swing.JScrollPane spaceStationScrollShields;
    private javax.swing.JScrollPane spaceStationScrollWeapons;
    private javax.swing.JPanel spaceStationShiedlsPanel;
    private javax.swing.JLabel spaceStationShieldPower;
    private javax.swing.JLabel spaceStationShieldPower_title;
    private javax.swing.JLabel spaceStationShields_title;
    private javax.swing.JPanel spaceStationWeaponsPanel;
    private javax.swing.JLabel spaceStationWeapons_title;
    // End of variables declaration//GEN-END:variables
}
